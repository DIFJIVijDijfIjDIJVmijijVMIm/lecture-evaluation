package com.cos.lecture.service;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import com.cos.lecture.model.User;

import lombok.Data;

@Data
public class MyUserDetails implements UserDetails{
	
	private User user;

	@Override
	public String getPassword() {
		return user.getUserPassword();
	}

	@Override
	public String getUsername() {
		return user.getUserName();
	}

	@Override
	public boolean isAccountNonExpired() {
		return true;
	}

	@Override
	public boolean isAccountNonLocked() {
		return true;
	}

	@Override
	public boolean isCredentialsNonExpired() {
		return true;
	}

	@Override
	public boolean isEnabled() {
		return true;
	}
	
	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		
		Collection<SimpleGrantedAuthority> collectors = new ArrayList<>();
//		List<UserRole> roles = user.getRoles();
//		for(UserRole ur : roles) {
//			System.out.println(ur.getRole().getRole());
//			collectors.add(new SimpleGrantedAuthority("ROLE_"+ur.getRole().getRole()));
//		}
				
		return collectors;
	}
	
}